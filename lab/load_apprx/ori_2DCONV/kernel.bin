//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20, texmode_independent
.address_size 64

	// .globl	Convolution2D_kernel // -- Begin function Convolution2D_kernel
.func  (.param .b64 func_retval0) get_global_id
(
	.param .b32 get_global_id_param_0
)
;
                                        // @Convolution2D_kernel
.entry Convolution2D_kernel(
	.param .u64 .ptr .global .align 4 Convolution2D_kernel_param_0,
	.param .u64 .ptr .global .align 4 Convolution2D_kernel_param_1,
	.param .u32 Convolution2D_kernel_param_2,
	.param .u32 Convolution2D_kernel_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<12>;

// %bb.0:
	mov.u32 	%r4, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r4;
	.param .b64 retval0;
	call.uni (retval0), 
	get_global_id, 
	(
	param0
	);
	ld.param.b64 	%rd3, [retval0+0];
	} // callseq 0
	ld.param.u32 	%r5, [Convolution2D_kernel_param_2];
	mov.u32 	%r6, 1;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r6;
	.param .b64 retval0;
	call.uni (retval0), 
	get_global_id, 
	(
	param0
	);
	ld.param.b64 	%rd4, [retval0+0];
	} // callseq 1
	cvt.u32.u64 	%r2, %rd4;
	add.s32 	%r7, %r5, -1;
	setp.le.s32 	%p1, %r7, %r2;
	@%p1 bra 	LBB0_3;
// %bb.1:
	ld.param.u32 	%r3, [Convolution2D_kernel_param_3];
	cvt.u32.u64 	%r1, %rd3;
	add.s32 	%r8, %r3, -1;
	setp.gt.s32 	%p2, %r8, %r1;
	setp.gt.s32 	%p3, %r2, 0;
	and.pred  	%p4, %p2, %p3;
	setp.gt.s32 	%p5, %r1, 0;
	and.pred  	%p6, %p5, %p4;
	@!%p6 bra 	LBB0_3;
	bra.uni 	LBB0_2;
LBB0_2:
	ld.param.u64 	%rd2, [Convolution2D_kernel_param_1];
	ld.param.u64 	%rd1, [Convolution2D_kernel_param_0];
	add.s32 	%r9, %r2, -1;
	mul.lo.s32 	%r10, %r9, %r3;
	cvt.s64.s32 	%rd5, %r10;
	cvt.s64.s32 	%rd6, %r1;
	add.s64 	%rd7, %rd5, %rd6;
	shl.b64 	%rd8, %rd7, 2;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.f32 	%f1, [%rd9+-4];
	mul.rn.f32 	%f2, %f1, 0f3F000000;
	fma.rn.f32 	%f3, %f1, 0f3E4CCCCD, %f2;
	fma.rn.f32 	%f4, %f1, 0fBF4CCCCD, %f3;
	fma.rn.f32 	%f5, %f1, 0fBE99999A, %f4;
	mad.lo.s32 	%r11, %r2, %r3, %r1;
	fma.rn.f32 	%f6, %f1, 0f3F19999A, %f5;
	fma.rn.f32 	%f7, %f1, 0fBF666666, %f6;
	fma.rn.f32 	%f8, %f1, 0f3ECCCCCD, %f7;
	fma.rn.f32 	%f9, %f1, 0f3F333333, %f8;
	fma.rn.f32 	%f10, %f1, 0f3DCCCCCD, %f9;
	mul.wide.s32 	%rd10, %r11, 4;
	add.s64 	%rd11, %rd2, %rd10;
	st.global.f32 	[%rd11], %f10;
LBB0_3:
	ret;
}
                                        // -- End function
	// .weak	get_global_id   // -- Begin function get_global_id
.func  (.param .b64 func_retval0) get_global_id(
	.param .b32 get_global_id_param_0
)                                       // @get_global_id
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<4>;

// %bb.0:
	ld.param.u32 	%r9, [get_global_id_param_0];
	setp.eq.s32 	%p1, %r9, 2;
	@%p1 bra 	LBB1_5;
// %bb.1:
	setp.eq.s32 	%p2, %r9, 1;
	@%p2 bra 	LBB1_4;
// %bb.2:
	mov.u32 	%r17, 0;
	setp.ne.s32 	%p3, %r9, 0;
	mov.u32 	%r18, %r17;
	@%p3 bra 	LBB1_6;
// %bb.3:                               // %get_group_id.exit.thread
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r16, %ntid.x;
	mul.lo.s32 	%r17, %r16, %r15;
	mov.u32 	%r18, %tid.x;
	bra.uni 	LBB1_6;
LBB1_5:                                 // %get_group_id.exit.thread2
	mov.u32 	%r11, %ctaid.z;
	mov.u32 	%r12, %ntid.z;
	mul.lo.s32 	%r17, %r12, %r11;
	mov.u32 	%r18, %tid.z;
	bra.uni 	LBB1_6;
LBB1_4:                                 // %get_group_id.exit.thread1
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %ntid.y;
	mul.lo.s32 	%r17, %r14, %r13;
	mov.u32 	%r18, %tid.y;
LBB1_6:                                 // %get_local_id.exit
	cvt.u64.u32 	%rd1, %r17;
	cvt.u64.u32 	%rd2, %r18;
	add.s64 	%rd3, %rd2, %rd1;
	st.param.b64 	[func_retval0+0], %rd3;
	ret;
}
                                        // -- End function

